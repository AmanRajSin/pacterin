<!DOCTYPE html>
<html>

<head>
    <title>Private Chat</title>
    <% include partial/cdn-includes.ejs %>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" type="text/css" href="../css/stylesheet.css">
    <link href="https://fonts.googleapis.com/css?family=Exo+2" rel="stylesheet">
    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.5.0/css/all.css" integrity="sha384-B4dIYHKNBt8Bc12p+WXckhzcICo0wtJAoU8YZTY5qE0Id1GSseTk6S+L3BlXeVIU" crossorigin="anonymous">

        <script>
            function fireInput(){
                $('#message').trigger('input_event');
            }
            $(document).ready(function(){

            var username = '<%= (from) ? from : `` %>';
            var to = '<%= (to) ? to : `` %>';
            if(!username) window.location.replace('/login');
            var amTyping = false;
            $(function(){
                var socket = io.connect(window.location.origin + '/messenger', {query : 'username=' + username });

                var message = $('#message');
                var send_message = $('#send_message');
                var chatroom = $('.chat-flex');

                $(".chat-screen-header-name").text(to);
                $(".chat-screen-header-name").attr("href" , "/profile/"+to);


                // Chat history
                socket.emit('req_chat_history', {to: to});

                socket.on('chat_history', function(data){
                    //chatroom.html('');
                    if(username<to)
                    {
                        data.messages.reverse().forEach(element => {
                            if(element.from == 0){ chatroom.prepend(`<div>
                                                                        <div class="message-dialog-send">` +
                                                                                element.msg
                                                                        + `</div>
                                                                    </div>`)}
                            else{ chatroom.prepend(`<div>
                                                    <div class="message-dialog-receive">` +
                                                        element.msg
                                                    + `</div>
                                                </div>`)};
                        });
                    }
                    else {
                        data.messages.reverse().forEach(element => {
                            if(element.from == 1){ chatroom.prepend(`<div>
                                                                        <div class="message-dialog-send">` +
                                                                                element.msg
                                                                        + `</div>
                                                                    </div>`)}
                            else{ chatroom.prepend(`<div>
                                                    <div class="message-dialog-receive">` +
                                                        element.msg
                                                    + `</div>
                                                </div>`)};
                        });
                    }
                });

                // Send messages
                send_message.click(function() {
                    if (message.val()!=''){
                        socket.emit('new_message', { to: to, message : message.val()});
                        chatroom.prepend(`<div>
                                                                        <div class="message-dialog-send">` +
                                                                                message.val()
                                                                        + `</div>
                                                                    </div>`);
                        $("#" + to + " .chat-head-message").text("You: " + message.val());
                        message.val('');
                    }
                });

                message.on('keypress', function(e) {
                    if (e.keyCode == 13 && message.val()!='') {
                        socket.emit('new_message', { to: to, message : message.val()});
                        chatroom.prepend(`<div>
                                                                        <div class="message-dialog-send">` +
                                                                                message.val()
                                                                        + `</div>
                                                                    </div>`);
                        $("#" + to + " .chat-head-message").text("You: " + message.val());
                        message.val('');
                        message.trigger('input_event');
                        return false;
                    }
                });

                // Receive messages
                socket.on('new_message', function(data) {
                    if(to==data.from)
                        chatroom.prepend(`<div>
                                                    <div class="message-dialog-receive">` +
                                                        data.message
                                                    + `</div>
                                                </div>`);
                        $("#" + data.from + " .chat-head-message").text(data.message);
                });

                // Is typing... events
                /*$(document).on('blur', '#message', function () {
                    amTyping = false;
                    socket.emit('user_not_typing', {to: to});
                });*/
                message.blur(function(){
                    amTyping = false;
                    socket.emit('user_not_typing', {to: to});
                });

                message.on('input_event', function(){
                    if(amTyping==false && message.val().length > 0) {
                        amTyping = true;
                        socket.emit('user_typing', {to: to});
                    }
                    else if(amTyping==true && message.val().length === 0) {
                        amTyping = false;
                        socket.emit('user_not_typing', {to: to});
                    }
                });

                socket.on('get_user_typing', function(data){
                    $('#typing').html(data.from + ' is typing...');
                });

                socket.on('get_user_not_typing', function(data){
                    $('#typing').html('');
                });
                /*
                // Online friends
                socket.on('friends_update', function(data){
                    var arr = $.grep(data.users, function(value){return value!=username;});
                    to.html('');
                    $.each(arr, function(index, value){
                        to.append($('<option></option>').val(index).html(value));
                    });
                    to.trigger('change');
                });*/

                //recent chats
                socket.on('recent_chats_res', function(data){
                    $.each(data.message , function(index, value){
                        var name;
                        var sender='';
                        result = value.id.split(':');
                        if (result[0]==username){
                            name=result[1];
                        }else{
                            name=result[0];
                        }
                        if (!value.messages.messages[0]){
                            value.messages.messages[0] = {"from": name, "msg": " "};
                        }
                        if (result[value.messages.messages[0].from] == username){
                            sender = "You: ";
                        }
                        $(".chat-bar").append(`
                            <div class="chat-head" id = "` + name + `" >
                            <i class="fas fa-user-secret" style="font-size: 70px; padding: 10px;"></i>
                            <ul class="chat-head-list">
                                <li>` + name + `</li>
                                <li>THURSDAY 9:43 AM</li>
                            </ul>
                            <p class="chat-head-message">` +  sender + value.messages.messages[0].msg + `</p>

                            <script>
                                $(document).ready(function(){


                                var nam = '/messenger/` + name + `';

                                $("`+ `#` + name + `").click(function(){
                                window.location.href=nam}) });
                            <\/script>
                            </div>`
                        );
                    });
                });

                socket.emit('recent_chats');
            });

        });
        </script>
</head>

<body>
    <div class="grid-container">
        <div class="grid-item">
            <div class="chat-bar">
                <div class="chat-bar-header">
                    RECENT CHATS
                </div>
            </div>
        </div>

        <div class="grid-item">
            <div class="chat-screen-header">
                <a href="" class="chat-screen-header-name"></a>
                <p id="typing"></p>
            </div>

            <div class="chat-flex">

            </div>

            <div class="chat-screen-footer">
                <form>
                    <input id="message" placeholder="Type here..." maxlength="200" oninput="fireInput()">
                    <button id="send_message">Send</button>
                </form>
            </div>
        </div>

        <div class="grid-item">3
        </div>
    </div>
</body>

</html>
